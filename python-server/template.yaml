AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Python 3.10 based SAM Template for PyTorch ML Prediction Model Server

Resources:
  WarmupFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      Timeout: 15
      PackageType: Image
      ImageConfig:
        Command: ['app.lambda_warmup']
      # need this to run docker on mac
      # Architectures: ['arm64']
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /warmup
            Method: post
    Metadata:
      Dockerfile: ./lambdas/warmup/Dockerfile
      DockerContext: ./
      DockerTag: python3.10-v1-1

  DetectFaceFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 3008
      Timeout: 60
      PackageType: Image
      ImageConfig:
        Command: ['app.lambda_detect_face']
      # need this to run docker on mac
      # Architectures: ['arm64']
      Environment:
        Variables:
          AMAZON_BUCKET: face-2-simpson-images
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /detect-face
            Method: post
    Metadata:
      Dockerfile: ./lambdas/prediction/Dockerfile
      DockerContext: ./
      DockerTag: python3.10-v1-1
      
  PredictImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 3008
      Timeout: 60
      PackageType: Image
      ImageConfig:
        Command: ['app.lambda_predict_image']
      # need this to run docker on mac
      # Architectures: ['arm64']
      Environment:
        Variables:
          AMAZON_BUCKET: face-2-simpson-images
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /predict
            Method: post
    Metadata:
      Dockerfile: ./lambdas/prediction/Dockerfile
      DockerContext: ./
      DockerTag: python3.10-v1-1

  RetrainModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 3008
      Timeout: 840
      PackageType: Image
      ImageConfig:
        Command: ['app.lambda_retrain_function']
      # need this to run docker on mac
      # Architectures: ['arm64']
      Environment:
        Variables:
          AMAZON_BUCKET: face-2-simpson-images
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /retrain
            Method: post
    Metadata:
      Dockerfile: ./lambdas/prediction/Dockerfile
      DockerContext: ./
      DockerTag: python3.10-v1-2

  GeneratePresignedUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      Timeout: 15
      PackageType: Image
      ImageConfig:
        Command: ['app.lambda_generate_presigned_url']
      # need this to run docker on mac
      # Architectures: ['arm64']
      Environment:
        Variables:
          AMAZON_BUCKET: face-2-simpson-images
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /generate-presigned-url
            Method: post
    Metadata:
      Dockerfile: ./lambdas/presigned_url/Dockerfile
      DockerContext: ./
      DockerTag: python3.10-v1-1

Outputs:
  DetectFaceApi:
    Description: 'API Gateway endpoint URL for Prod stage for detect-face function'
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/detect-face'
  PredictApi:
    Description: 'API Gateway endpoint URL for Prod stage for predict function'
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/predict'
  RetrainApi:
    Description: 'API Gateway endpoint URL for Prod stage for retrain function'
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/retrain'
  GeneratePresignedUrlApi:
    Description: 'API Gateway endpoint URL for Prod stage for generate presigned url function'
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/generate-presigned-url'
